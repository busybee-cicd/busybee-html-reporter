{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as Handlebars from 'handlebars';\r\nimport * as fs from 'fs-extra';\r\nimport * as path from 'path';\r\nimport * as _ from 'lodash';\r\nimport * as randomID from 'random-id';\r\nimport * as moment from 'moment';\r\nconst jsondiffpatch = require('jsondiffpatch');\r\nconst _jsondiffpatch = jsondiffpatch.create();\r\nconst _jsondiffpatchFormatters = jsondiffpatch.formatters;\r\n\r\n// remove any fns that may be passed\r\n_jsondiffpatch.processor.pipes.diff.before('trivial', (context) => {\r\n  if (typeof context.left === 'function' || typeof context.right === 'function' ) {\r\n    context.setResult(undefined);\r\n    context.exit();\r\n  }\r\n});\r\n\r\nexport class BusybeeHtmlReporter {\r\n\r\n  outputDir: string;\r\n  projectName: string;\r\n  skipInLocalMode: boolean;\r\n\r\n  constructor(opts: any) {\r\n    this.outputDir = opts.outputDir;\r\n    this.projectName = opts.projectName;\r\n    this.skipInLocalMode = opts.skipInLocalMode;\r\n  }\r\n\r\n  run(testSuiteResults: any) {\r\n    // read the index out first...\r\n    let filenames = fs.readdirSync(path.join(__dirname, 'templates'));\r\n    let templateSrcs: any = {};\r\n    filenames.forEach(f => {\r\n      let name = path.basename(f).replace('.hbs', '');\r\n      templateSrcs[name] = fs.readFileSync(path.join(__dirname, 'templates', f), 'utf8');\r\n    });\r\n\r\n    // 1. save off indexFile while partials are read and registered\r\n    let indexFile = templateSrcs.index;\r\n    delete templateSrcs.index;\r\n\r\n    // 2. register partials\r\n    Object.keys(templateSrcs).forEach(key => {\r\n      Handlebars.registerPartial(key, templateSrcs[key]);\r\n    });\r\n\r\n    // 3. register helpers\r\n    this.registerHelpers();\r\n\r\n    try {\r\n      // 4. compile the index template\r\n      let indexTemplate = Handlebars.compile(indexFile);\r\n      let data = {\r\n        projectName: this.projectName,\r\n        testSuites: this.decorateTestSuites(testSuiteResults)\r\n      };\r\n\r\n      // 5. generate html\r\n      let html = indexTemplate(data);\r\n\r\n      // 6. recreate output dir.\r\n      fs.removeSync(this.outputDir);\r\n      fs.mkdirSync(this.outputDir);\r\n\r\n      fs.writeFileSync(path.join(this.outputDir, 'index.html'), html);\r\n      fs.copySync(path.join(__dirname, 'assets'), path.join(this.outputDir, 'assets'));\r\n    } catch (e) {\r\n      console.log(e.message);\r\n    }\r\n\r\n  }\r\n\r\n  /*\r\n    adds metadata helpful for building html\r\n   */\r\n  decorateTestSuites(testSuiteResults: any[]): any {\r\n    // filter out non-REST suites.\r\n\r\n    let restSuites = _.filter(testSuiteResults, ts => { return ts.type === 'REST'; });\r\n\r\n    console.log(restSuites.length);\r\n    restSuites.forEach(testSuite => {\r\n      testSuite.htmlID = testSuite.id.replace(/[^a-zA-Z0-9]/g,'');\r\n      testSuite.testSets.forEach(testSet => {\r\n        testSet.htmlID = testSet.id.replace(/[^a-zA-Z0-9]/g,'');\r\n        testSet.tests.forEach(test => {\r\n          test.htmlID = `${testSet.htmlID}${test.id.replace(/[^a-zA-Z0-9]/g,'')}`;\r\n        });\r\n      });\r\n    });\r\n\r\n    return restSuites;\r\n  }\r\n\r\n  registerHelpers() {\r\n    Handlebars.registerHelper('json', (context:any) => {\r\n      return JSON.stringify(context, null, '\\t');\r\n    });\r\n\r\n    Handlebars.registerHelper('diff', (options) => {\r\n      const context = options.hash;\r\n      if (!context.expected) {\r\n        context.expected = \"A custom assertion function was used and no specific error was thrown.\";\r\n      }\r\n\r\n      let delta = _jsondiffpatch.diff(context.expected, context.actual);\r\n      return new Handlebars.SafeString(_jsondiffpatchFormatters.html.format(delta, context.expected));\r\n    });\r\n\r\n    Handlebars.registerHelper('sideBySide', (options) => {\r\n      const context = options.hash;\r\n      let expectedId = randomID(5,\"aA\");\r\n      let actualId = randomID(5,\"aA\");\r\n      let leftHtml = `<div class=\"compare-left col-6\" id=\"${expectedId}\"></div>`;\r\n      let rightHtml = ` <div class=\"compare-right col-6\" id=\"${actualId}\"></div>`;\r\n\r\n      if (!context.expected) {\r\n        leftHtml = `<div class=\"compare-left col-6\">A custom assertion function was used and no specific error was thrown.</div>`;\r\n      } else {\r\n        leftHtml += `\r\n          <script>\r\n            \r\n            window['createSideBySideLeft${context.responsePart}${context.id}'] = \r\n            function() {\r\n              var node;\r\n              try {\r\n                node = new PrettyJSON.view.Node({\r\n                  el:$('#${expectedId}'),\r\n                  data: ${JSON.stringify(context.expected)}\r\n                }).expandAll();\r\n              } catch (e) {\r\n                $('#${expectedId}').text(JSON.stringify(context.expected));\r\n              }\r\n              \r\n              window['removeSideBySideLeft${context.responsePart}${context.id}'] = function() {\r\n                $('#${expectedId}').empty();\r\n                node = null;\r\n              }\r\n            };\r\n           \r\n          </script>\r\n        `;\r\n      }\r\n\r\n      rightHtml += `\r\n        <script>\r\n          window['createSideBySideRight${context.responsePart}${context.id}'] =\r\n          function() {\r\n              var node;\r\n              try {\r\n                  node = new PrettyJSON.view.Node({\r\n                    el:$('#${actualId}'),\r\n                    data: ${JSON.stringify(context.actual)}\r\n                  }).expandAll();\r\n              } catch (e) {\r\n                  $('#${actualId}').text(JSON.stringify(context.actual));\r\n              }\r\n              \r\n              window['removeSideBySideRight${context.responsePart}${context.id}'] = function() {\r\n                $('#${expectedId}').empty();\r\n                node = null;\r\n              }\r\n          };\r\n        </script>\r\n      `;\r\n\r\n      let html = `\r\n        <div class=\"row\">\r\n            <div class=\"col-6\"><h4>expected</h4></div>\r\n            <div class=\"col-6\"><h4>actual</h4></div>\r\n        </div>\r\n        <div class=\"row\">\r\n            ${leftHtml}\r\n            ${rightHtml}\r\n        </div>\r\n      `;\r\n\r\n      return new Handlebars.SafeString(html);\r\n    });\r\n\r\n    Handlebars.registerHelper('jsonPretty', json => {\r\n      let id = randomID(5,\"aA\");\r\n      let div = `<div id=\"${id}\"></div>`;\r\n      let script =\r\n        `<script>\r\n            $(function() {\r\n              new PrettyJSON.view.Node({\r\n                el:$('#${id}'),\r\n                data: ${JSON.stringify(json)}\r\n              }).expandAll();\r\n            });\r\n          </script>`;\r\n\r\n      let html = `${div}${script}`;\r\n\r\n      return new Handlebars.SafeString(html);\r\n    });\r\n\r\n    Handlebars.registerHelper('jsonRaw', json => {\r\n      let html = `<pre>${JSON.stringify(json, null, '\\t')}</pre>`;\r\n\r\n      return new Handlebars.SafeString(html);\r\n    });\r\n\r\n\r\n    Handlebars.registerHelper('currentTime', context => {\r\n      return moment().format();\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default BusybeeHtmlReporter;\r\n"]}